<?php

/**
 * Implementation of hook_autoload_info().
 */
function simplegeo_solrapi_autoload_info() {
  return array(
    'SimplegeoSearchResource' => array(
      'file' => 'SimplegeoSearchResource.php',
    ),
  );
}

/**
 * Implementation of hook_simplegeo_map_plugin().
 */
function simplegeo_solrapi_simplegeo_map_plugin() {
  $plugins = array();

  $plugins[] = array(
    'name' => 'simplegeo_solrapi',
    'title' => t('Solr tag filter'),
    'js' => array('simplegeo_solrapi.js'),
  );

  return $plugins;
}

/**
 * Add the layer resource to the Simple Geo API.
 *
 * @param array $resources
 * @return void
 */
function simplegeo_solrapi_simplegeo_api_resources_alter(&$resources) {
  $resources['simplegeo-search'] = array(
    'alias' => 'search',
    'operations' => array(
      'index' => array(
        'enabled' => 1,
      ),
    ),
  );
}

/**
 * Implementation of hook_services_resources().
 */
function simplegeo_solrapi_services_resources() {
  return array(
    'simplegeo-search' => array(
      'index' => array(
        'access arguments' => array('use solr resource search'),
        'callback' => 'SimplegeoSearchResource::index',
        'args' => array(
          array(
            'name' => 'z',
            'type' => 'int',
            'description' => 'The zoom level for the tile.',
            'default value' => 0,
            'source' => array('param' => 'z'),
          ),
          array(
            'name' => 'x',
            'type' => 'int',
            'description' => 'The x-index of the tile.',
            'default value' => 0,
            'source' => array('param' => 'x'),
          ),
          array(
            'name' => 'y',
            'type' => 'int',
            'description' => 'The y-index of the tile.',
            'default value' => 0,
            'source' => array('param' => 'y'),
          ),
          array(
            'name' => 'query',
            'type' => 'string',
            'description' => 'The solr query.',
            'default value' => '',
            'source' => array('param' => 'query'),
          ),
          array(
            'name' => 'page',
            'type' => 'int',
            'description' => 'The page offset.',
            'optional' => TRUE,
            'default value' => 0,
            'source' => array('param' => 'page'),
          ),
          array(
            'name' => 'fields',
            'type' => 'string',
            'description' => 'The comma-separated list of fields to return.',
            'default value' => '',
            'optional' => TRUE,
            'source' => array('param' => 'fields'),
          ),
          array(
            'name' => 'params',
            'type' => 'array',
            'description' => 'Extra parameters for the search.',
            'default value' => array(),
            'optional' => TRUE,
            'source' => 'param',
          ),
        ),
      ),
    ),
  );
}

/**
 * Implementation of hook_apachesolr_update_index().
 */
function simplegeo_solrapi_apachesolr_update_index(&$doc, $node) {
  if (!empty($node->simple_geo_position)) {
    module_load_include('inc', 'simplegeo_api');
    // Calculate the tiles from zoom level 1 to 16.
    $coords = simple_geo_coordinates_to_array($node->simple_geo_position);
    $t = GMapTile::getTileCoordinate($coords[0], $coords[1], 0);
    for ($i=0; $i<16; $i++) {
      $doc->addField('sm_simple_geo_tile', sprintf('%02d.%05d.%05d', 16-$i, $t->x, $t->y));
      $t->x = ($t->x - 1) / 2;
      $t->y = ($t->y - 1) / 2;
    }
  }
}
